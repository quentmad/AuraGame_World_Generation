/*package aura_game.app;

import aura_game.app.S2.Config;
import aura_game.app.S2.PerlinNoise;
import aura_game.app.S2.World;
import aura_game.app.S2.WorldDrawer;
import com.badlogic.gdx.ApplicationAdapter;
import com.badlogic.gdx.Gdx;
import com.badlogic.gdx.graphics.GL20;
import com.badlogic.gdx.graphics.g2d.Batch;
import com.badlogic.gdx.graphics.g2d.SpriteBatch;

/**
 * Classe principale de l'application libGDX. Gère le cycle de vie du jeu, la mise à jour et le rendu graphique.
 */
public class AuraGDX extends ApplicationAdapter {

    private SpriteBatch batch;
    private World world;
    private WorldDrawer worldDrawer;
    private PerlinNoise perlinNoise = new PerlinNoise();

    @Override
    public void create() {
        batch = new SpriteBatch();
        // Initialise ton monde avec une graine aléatoire
        long seed = System.currentTimeMillis();
        world = new World(Config.WORLD_X, Config.WORLD_Y, perlinNoise);

        // Initialise le dessinateur du monde
        worldDrawer = new WorldDrawer(batch);
    }

    /**
     * Appelé de façon continue par la boucle principale de libGDX
     */
    @Override
    public void render() {
        // Efface l'écran
        Gdx.gl.glClearColor(0, 0, 0, 1);
        Gdx.gl.glClear(GL20.GL_COLOR_BUFFER_BIT);

        // Obtient la carte du monde en fonction du bruit généré
        int[][] terrainTypeMap = world.getTiledMap(Config.TERRAIN_WEIGHTS);

        // Dessine la carte du monde
        worldDrawer.draw(terrainTypeMap, true);
    }

    /**
     * Appelé lorsque l'application est détruite.
     */
    @Override
    public void dispose() {
        // Nettoie les ressources utilisées
        //worldDrawer.dispose();
    }
}
